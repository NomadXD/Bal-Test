openapi: 3.0.1
info:
  title: AfterSales
  description: The purpose of this API is to support after sales process.
  version: v1.0.0
servers:
 -
  url: /
security:
 -
  default: []
paths:
  /hub/tickets:
    get:
      tags:
       - aftersales
      summary: Retrieve hub tickets according to parameters
      parameters:
       -
        name: partnerId
        in: query
        description: "Hub PartnerId. Example: 244 (Magazine Luiza)"
        required: true
        style: form
        explode: true
        schema:
          type: string
       -
        name: subjectId
        in: query
        description: Ticket subject Id. Example 156(Troca) or 155(Cancelamento)
        required: true
        style: form
        explode: true
        schema:
          type: string
       -
        name: fromDate
        in: query
        description: Search tickets created after thits date. Example 2022-06-01
        required: true
        style: form
        explode: true
        schema:
          type: string
       -
        name: toDate
        in: query
        description: Search tickets created before this date. Example 2022-06-02
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ticketsGet200Response'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/error400PostResponse'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/error401Response'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/error404Response'
        "500":
          description: Internal Server Error - Unexpected Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/error500Response'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-throttling-limit:
        requestCount: -1
        unit: MINUTE
components:
  schemas:
    ticketsGet200Response:
      type: object
      properties:
        tickets:
          type: array
          items:
            type: object
            properties:
              partner:
                type: string
                example: Magazine Luiza
              partnerTicketId:
                type: number
                example: 111
              managerTicketId:
                type: number
                example: 1111
              integrationMessage:
                type: string
                example: message
              ticketCreationDate:
                type: string
                example: 2022-05-31T21:00:00.000-03:00
              ticketSubjectDetail:
                type: string
                example: ticket subject
              customerName:
                type: string
                example: Customer Name
              ticketSubject:
                type: string
                example: JEC / Justi√ßa Comum
              occurrenceId:
                type: string
                example: "1111111"
    error401Response:
      type: object
      properties:
        fault:
          type: object
          properties:
            code:
              type: string
              example: "900901"
            message:
              type: string
              example: Invalid Credentials
            details:
              type: string
              example: "Access failure for API: /t/a/ims/v1.0.0, version: v1.0.0 status: (900901) - Invalid Credentials. Make sure you have given the correct access token"
    error400PostResponse:
      type: object
      properties:
        errorCode:
          type: string
          example: "323"
        message:
          type: string
          example: Invalid Request
        details:
          type: string
          example: One or more mandatory parameters are missing or dates are out of valid range
    error404Response:
      type: object
      properties:
        fault:
          type: object
          properties:
            code:
              type: string
              example: "404"
            type:
              type: string
              example: Status report
            message:
              type: string
              example: Runtime Error
            details:
              type: string
              example: No matching resource found for given API Request
    error500Response:
      type: object
      properties:
        errorCode:
          type: string
          example: "500"
        details:
          type: string
          example: The execution of the service failed in some way.
        message:
          type: string
          example: Internal Server Error
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
x-original-swagger-version: "2.0"
x-wso2-disable-security: false
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins: []
  accessControlAllowCredentials: false
  accessControlAllowHeaders: []
  accessControlAllowMethods: []
x-wso2-production-endpoints:
  urls:
   - https://abctesrt.requestcatcher.com/test
  type: http
x-wso2-sandbox-endpoints:
  urls:
   - https://abctesrt.requestcatcher.com/test
  type: http
x-wso2-basePath: /ba513fb8-bd9b-4e5a-870b-8806a19734ef/ynrn/aftersales/v1.0
x-wso2-transports:
 - http
 - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300